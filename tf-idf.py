import pandas as pd
import statistics
import matplotlib.pyplot as plt
import numpy as np
from matplotlib.pyplot import figure

def tf(total_terms,feature):
    return feature/total_terms

def idf(no_of_d,no_d_with_terms):
    return np.log((1+no_of_d)/(1+no_d_with_terms))

df=pd.read_csv('C:/Users/sze/FYP/features_asm.csv')
c_tf=[]
j_tf=[]
r_tf=[]
jne_tf=[]
jcc_tf=[]
jnz_tf=[]
family=['adware','crypto_miner','spyware','file_infector','worm','downloader','ransomware','installer','dropper','packed','flooder']

for i in range(len(df)):
    document=df.iloc[i]
    c_tf.append(tf(document['No_of_Terms'],document['CALL']))
    j_tf.append(tf(document['No_of_Terms'],document['JMP']))
    r_tf.append(tf(document['No_of_Terms'],document['RET']))
    jcc_tf.append(tf(document['No_of_Terms'],document['JCC']))
    jne_tf.append(tf(document['No_of_Terms'],document['JNE']))
    jnz_tf.append(tf(document['No_of_Terms'],document['JNZ']))

df['JMP_TF']=j_tf
df['CALL_TF']=c_tf
df['RET_TF']=r_tf
df['JCC_TF']=jcc_tf
df['JNE_TF']=jne_tf
df['JNZ_TF']=jnz_tf

n_of_files=[]
ctf=[]
jtf=[]
rtf=[]
jcctf=[]
jnetf=[]
jnztf=[]
n_of_d_with_j=[]
n_of_d_with_jne=[]
n_of_d_with_jnz=[]
n_of_d_with_jcc=[]
n_of_d_with_c=[]
n_of_d_with_r=[]

for i in range(len(family)):
    data=df.loc[df['Family']==family[i]]
    n_of_d_with_j.append(len(data.loc[data['JMP']>0]))
    n_of_d_with_jcc.append(len(data.loc[data['JCC']>0]))
    n_of_d_with_jne.append(len(data.loc[data['JNE']>0]))
    n_of_d_with_jnz.append(len(data.loc[data['JNZ']>0]))
    n_of_d_with_c.append(len(data.loc[data['CALL']>0]))
    n_of_d_with_r.append(len(data.loc[data['RET']>0]))
    mean_jtf=statistics.mean(data['JMP_TF'])
    mean_jcctf=statistics.mean(data['JCC_TF'])
    mean_jnetf=statistics.mean(data['JNE_TF'])
    mean_jnztf=statistics.mean(data['JNZ_TF'])
    mean_ctf=statistics.mean(data['CALL_TF'])
    mean_rtf=statistics.mean(data['RET_TF'])
    n_of_files.append(len(data))
    ctf.append(mean_ctf)
    jtf.append(mean_jtf)
    jcctf.append(mean_jcctf)
    jnetf.append(mean_jnetf)
    jnztf.append(mean_jnztf)
    rtf.append(mean_rtf)

#calculate idf
cidf=[]
jidf=[]
jccidf=[]
jneidf=[]
jnzidf=[]
ridf=[]
for i in range(len(family)):
    data=df.loc[df['Family']==family[i]]
    cidf.append(idf(len(data),n_of_d_with_c[i]))
    jidf.append(idf(len(data),n_of_d_with_j[i]))
    jccidf.append(idf(len(data),n_of_d_with_jcc[i]))
    jneidf.append(idf(len(data),n_of_d_with_jne[i]))
    jnzidf.append(idf(len(data),n_of_d_with_jnz[i]))
    ridf.append(idf(len(data),n_of_d_with_r[i]))
    df.loc[df['Family']==family[i],'CALL_IDF']=idf(len(data),n_of_d_with_c[i])
    df.loc[df['Family']==family[i],'JMP_IDF']=idf(len(data),n_of_d_with_j[i])
    df.loc[df['Family']==family[i],'JCC_IDF']=idf(len(data),n_of_d_with_jcc[i])
    df.loc[df['Family']==family[i],'JNE_IDF']=idf(len(data),n_of_d_with_jne[i])
    df.loc[df['Family']==family[i],'JNZ_IDF']=idf(len(data),n_of_d_with_jnz[i])
    df.loc[df['Family']==family[i],'RET_IDF']=idf(len(data),n_of_d_with_r[i])

df['JMP_TFIDF']=df['JMP_TF']*df['JMP_IDF']
df['JCC_TFIDF']=df['JCC_TF']*df['JCC_IDF']
df['JNE_TFIDF']=df['JNE_TF']*df['JNE_IDF']
df['JNZ_TFIDF']=df['JNZ_TF']*df['JNZ_IDF']
df['RET_TFIDF']=df['RET_TF']*df['RET_IDF']
df['CALL_TFIDF']=df['CALL_TF']*df['CALL_IDF']
df.to_csv('C:/Users/sze/FYP/features_asm.csv',index=False)

##plot ctf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,ctf,color='orange',marker='x',label='CALL TF')
ax2.set_ylabel('CALL TF')
plt.legend()
plt.title('Term Frequency of CALL in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/call_tf.png')

##plot jtf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jtf,color='orange',marker='x',label='JMP TF')
ax2.set_ylabel('JMP TF')
plt.legend()
plt.title('Term Frequency of JMP in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/jmp_tf.png')

##plot jcctf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jcctf,color='orange',marker='x',label='JCC TF')
ax2.set_ylim([0,0.5])
ax2.set_ylabel('JCC TF')
plt.legend()
plt.title('Term Frequency of JCC in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/jcc_tf.png')

##plot jnetf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jnetf,color='orange',marker='x',label='JNE TF')
ax2.set_ylabel('JNE TF')
plt.legend()
plt.title('Term Frequency of JNE in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/jne_tf.png')

##plot jnztf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jnztf,color='orange',marker='x',label='JNZ TF')
ax2.set_ylabel('JNZ TF')
ax2.set_ylim([0,0.5])
plt.legend()
plt.title('Term Frequency of JNZ in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/jnz_tf.png')


##plot rtf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,rtf,color='orange',marker='x',label='RET TF')
ax2.set_ylabel('RET TF')
plt.legend()
plt.title('Term Frequency of RET in each Malware Family')
plt.savefig('C:/Users/sze/FYP/tf/ret_tf.png')

#plot idf(call)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,cidf,color='orange',marker='x',label='CALL IDF')
ax2.set_ylabel('CALL IDF')
plt.legend()
plt.title('Inversed Document Frequency of CALL in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/call_idf.png')

#####plot idf(jmp)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jidf,color='orange',marker='x',label='JMP IDF')
ax2.set_ylabel('JMP IDF')
plt.legend()
plt.title('Inversed Document Frequency of JMP in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/jmp_idf.png')

#####plot idf(jcc)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jccidf,color='orange',marker='x',label='JCC IDF')
ax2.set_ylabel('JCC IDF')
plt.legend()
plt.title('Inversed Document Frequency of JCC in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/jcc_idf.png')

#####plot idf(jne)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jneidf,color='orange',marker='x',label='JNE IDF')
ax2.set_ylabel('JNE IDF')
plt.legend()
plt.title('Inversed Document Frequency of JNE in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/jne_idf.png')

#####plot idf(jnz)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jnzidf,color='orange',marker='x',label='JNZ IDF')
ax2.set_ylabel('JNZ IDF')
plt.legend()
plt.title('Inversed Document Frequency of JNZ in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/jnz_idf.png')

####plot idf(ret)
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,ridf,color='orange',marker='x',label='RET IDF')
ax2.set_ylabel('RET IDF')
plt.legend()
plt.title('Inversed Document Frequency of RET in each Malware Family')
plt.savefig('C:/Users/sze/FYP/idf/ret_idf.png')

####tfidf
call_tfidf=[]
jmp_tfidf=[]
jcc_tfidf=[]
jne_tfidf=[]
jnz_tfidf=[]
ret_tfidf=[]
for i in range(len(family)):
    call_tfidf.append(ctf[i]*cidf[i])
    jmp_tfidf.append(jtf[i]*jidf[i])
    jcc_tfidf.append(jcctf[i]*jccidf[i])
    jne_tfidf.append(jnetf[i]*jneidf[i])
    jnz_tfidf.append(jnztf[i]*jnzidf[i])
    ret_tfidf.append(rtf[i]*ridf[i])


###plot tfidf
figure(figsize=(8,8))
plt.plot(family,call_tfidf,color='green',marker='v',label='TF-IDF(CALL)')
plt.plot(family,ret_tfidf,color='orange',marker='x',label='TF-IDF(RET)')
plt.plot(family,jmp_tfidf,color='blue',marker='.',label='TF-IDF(JMP)')
plt.plot(family,jcc_tfidf,color='magenta',marker='^',label='TF-IDF(JCC)')
plt.plot(family,jne_tfidf,color='red',marker='s',label='TF-IDF(JNE)')
plt.plot(family,jnz_tfidf,color='cyan',marker='>',label='TF-IDF(JNZ)')
plt.ylabel('TF-IDF Score')
plt.xlabel('Malware Families')
plt.xticks(rotation=45)
plt.title("TF-IDF Score vs Malware Families")
plt.legend()
plt.savefig('C:/Users/sze/FYP/tfidf.png')

###plot tfidf (forward vs backward)
plt.clf()
forward=[]
for i in range(len(family)):
    forward.append(call_tfidf[i]+jmp_tfidf[i]+jcc_tfidf[i]+jne_tfidf[i]+jnz_tfidf[i])

plt.plot(family,forward,color='red',marker='v',label='TF-IDF(Forward)')
plt.plot(family,ret_tfidf,color='green',marker='v',label='TF-IDF(Backward)')
plt.ylabel('TF-IDF Score')
plt.xlabel('Malware Families')
plt.xticks(rotation=45)
plt.title("TF-IDF Score vs Malware Families")
plt.legend()
plt.savefig('C:/Users/sze/FYP/tfidf(forward vs backward).png')


###boxplot (tf)
df=pd.read_csv('C:/Users/sze/FYP/features_asm.csv')

for i in range(len(family)):
    plt.clf()
    j='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JMP_TF.png'
    jcc='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JCC_TF.png'
    jne='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNE_TF.png'
    jnz='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNZ_TF.png'
    c='C:/Users/sze/FYP/Boxplot/'+family[i]+'_CALL_TF.png'
    r='C:/Users/sze/FYP/Boxplot/'+family[i]+'_RET_TF.png'
    data=df.loc[df['Family']==family[i]]
    plt.boxplot(data['CALL_TF'])
    plt.xlabel('call')
    plt.ylabel('TF Distribution')
    plt.savefig(c)
    plt.clf()
    plt.boxplot(data['RET_TF'])
    plt.xlabel('ret')
    plt.ylabel('TF Distribution')
    plt.savefig(r)
    plt.clf()
    plt.boxplot(data['JMP_TF'])
    plt.xlabel('jmp')
    plt.ylabel('TF Distribution')
    plt.savefig(j)
    plt.clf()
    plt.boxplot(data['JCC_TF'])
    plt.xlabel('jcc')
    plt.ylabel('TF Distribution')
    plt.savefig(jcc)
    plt.clf()
    plt.boxplot(data['JNE_TF'])
    plt.xlabel('jne')
    plt.ylabel('TF Distribution')
    plt.savefig(jne)
    plt.clf()
    plt.boxplot(data['JNZ_TF'])
    plt.xlabel('jnz')
    plt.ylabel('TF Distribution')
    plt.savefig(jnz)

##boxplot (idf)
for i in range(len(family)):
    plt.clf()
    j='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JMP_IDF.png'
    jcc='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JCC_IDF.png'
    jne='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNE_IDF.png'
    jnz='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNZ_IDF.png'
    c='C:/Users/sze/FYP/Boxplot/'+family[i]+'_CALL_IDF.png'
    r='C:/Users/sze/FYP/Boxplot/'+family[i]+'_RET_IDF.png'
    data=df.loc[df['Family']==family[i]]
    plt.boxplot(data['CALL_IDF'])
    plt.xlabel('call')
    plt.ylabel('IDF Distribution')
    plt.savefig(c)
    plt.clf()
    plt.boxplot(data['RET_IDF'])
    plt.xlabel('ret')
    plt.ylabel('IDF Distribution')
    plt.savefig(r)
    plt.clf()
    plt.boxplot(data['JMP_IDF'])
    plt.xlabel('jmp')
    plt.ylabel('IDF Distribution')
    plt.savefig(j)
    plt.clf()
    plt.boxplot(data['JCC_IDF'])
    plt.xlabel('jcc')
    plt.ylabel('IDF Distribution')
    plt.savefig(jcc)
    plt.clf()
    plt.boxplot(data['JNE_IDF'])
    plt.xlabel('jne')
    plt.ylabel('IDF Distribution')
    plt.savefig(jne)
    plt.clf()
    plt.boxplot(data['JNZ_IDF'])
    plt.xlabel('jnz')
    plt.ylabel('IDF Distribution')
    plt.savefig(jnz)

###box plot tfidf
for i in range(len(family)):
    plt.clf()
    j='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JMP_TFIDF.png'
    jcc='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JCC_TFIDF.png'
    jne='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNE_TFIDF.png'
    jnz='C:/Users/sze/FYP/Boxplot/'+family[i]+'_JNZ_TFIDF.png'
    c='C:/Users/sze/FYP/Boxplot/'+family[i]+'_CALL_TFIDF.png'
    r='C:/Users/sze/FYP/Boxplot/'+family[i]+'_RET_TFIDF.png'
    data=df.loc[df['Family']==family[i]]
    plt.boxplot(data['CALL_TFIDF'])
    plt.xlabel('call')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(c)
    plt.clf()
    plt.boxplot(data['RET_TFIDF'])
    plt.xlabel('ret')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(r)
    plt.clf()
    plt.boxplot(data['JMP_TFIDF'])
    plt.xlabel('jmp')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(j)
    plt.clf()
    plt.boxplot(data['JCC_TFIDF'])
    plt.xlabel('jcc')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(jcc)
    plt.clf()
    plt.boxplot(data['JNE_TFIDF'])
    plt.xlabel('jne')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(jne)
    plt.clf()
    plt.boxplot(data['JNZ_TFIDF'])
    plt.xlabel('jnz')
    plt.ylabel('TF-IDF Distribution')
    plt.savefig(jnz)
