import pandas as pd
import statistics
import matplotlib.pyplot as plt
import numpy as np

def tf(total_terms,feature):
    return feature/total_terms

def idf(no_of_d,no_d_with_terms):
    return np.log(no_of_d/no_d_with_terms)

df=pd.read_csv('C:/Users/sze/FYP/features.csv')
c_tf=[]
j_tf=[]
r_tf=[]
family=['adware','crypto_miner','spyware','file_infector','worm','downloader','ransomware','installer','dropper','packed','flooder']

for i in range(len(df)):
    document=df.iloc[i]
    call_tf=tf(document['No_of_Terms'],document['CALL'])
    jmp_tf=tf(document['No_of_Terms'],document['JMP'])
    ret_tf=tf(document['No_of_Terms'],document['RET'])
    c_tf.append(call_tf)
    j_tf.append(jmp_tf)
    r_tf.append(ret_tf)
df['JMP_TF']=j_tf
df['CALL_TF']=c_tf
df['RET_TF']=r_tf

n_of_files=[]
ctf=[]
jtf=[]
rtf=[]
n_of_d_with_j=[]
n_of_d_with_c=[]
n_of_d_with_r=[]
df.to_csv('C:/Users/sze/FYP/features.csv')
for i in range(len(family)):
    data=df.loc[df['Family']==family[i]]
    n_of_d_with_j.append(len(data.loc[data['JMP']>0]))
    n_of_d_with_c.append(len(data.loc[data['CALL']>0]))
    n_of_d_with_r.append(len(data.loc[data['RET']>0]))
    mean_jtf=statistics.mean(data['JMP_TF'])
    mean_ctf=statistics.mean(data['CALL_TF'])
    mean_rtf=statistics.mean(data['RET_TF'])
    n_of_files.append(len(data))
    ctf.append(mean_ctf)
    jtf.append(mean_jtf)
    rtf.append(mean_rtf)

###plot ctf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,ctf,color='orange',marker='x',label='CALL TF')
ax2.set_ylabel('CALL TF')
plt.legend()
plt.title('Term Frequency of CALL in each Malware Family')
plt.savefig('C:/Users/sze/FYP/call_tf.png')

###plot jtf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,jtf,color='orange',marker='x',label='JMP TF')
ax2.set_ylabel('JMP TF')
plt.legend()
plt.title('Term Frequency of JMP in each Malware Family')
plt.savefig('C:/Users/sze/FYP/jmp_tf.png')


###plot rtf
fig,ax1=plt.subplots()
fig=fig.set_size_inches(8,8)
ax2=ax1.twinx()
ax1.bar(family,n_of_files)
ax1.set_ylabel('Number of Samples')
ax1.set_xlabel('Malware Families')
plt.setp(ax1.get_xticklabels(), rotation=30, horizontalalignment='right')
ax2.plot(family,rtf,color='orange',marker='x',label='RET TF')
ax2.set_ylabel('RET TF')
plt.legend()
plt.title('Term Frequency of RET in each Malware Family')
plt.savefig('C:/Users/sze/FYP/ret_tf.png')

#plot idf(call)
# cidf=[]
# for i in range(len(family)):
#     data=df.loc[df['Family']==family[i]]
#     cidf.append(idf(len(data),n_of_d_with_c[i]))
# print(cidf)
