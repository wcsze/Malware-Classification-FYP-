import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier as knn
import matplotlib.pyplot as plt
import numpy as np
from sklearn import metrics
from sklearn import preprocessing
from sklearn.model_selection import cross_val_score
from sklearn.svm import SVC


##process data
family=['adware','crypto_miner','spyware','file_infector','worm','downloader','ransomware','installer','dropper','packed','flooder']
df=pd.read_csv('C:/Users/sze/FYP/features_asm.csv')
df['forward']=df['JMP_TF'].values+df['CALL_TF'].values
df['backward']=df['RET_TF'].values
df.to_csv('C:/Users/sze/FYP/features_asm2.csv')
x=df[['forward','backward']].to_numpy()
y=df['Family'].to_numpy()

####normalization
#scaler=preprocessing.MinMaxScaler()
#x=scaler.fit_transform(x)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

# model=knn(n_neighbors=8)
# model.fit(x_train,y_train)
# y_pred=model.predict(x_test)
# score=metrics.accuracy_score(y_test,y_pred)
# print(score)

model=SVC(kernel='poly',degree=2)
model.fit(x_train,y_train)
y_pred=model.predict(x_test)
score=metrics.accuracy_score(y_test,y_pred)
print(score)

# color=['r','g','b','m','y']
# for i in range(len(color)):
#     plt.scatter(df.loc[df['Family']==family[i]]['forward'],df.loc[df['Family']==family[i]]['backward'],c=color[i])
# plt.show()

